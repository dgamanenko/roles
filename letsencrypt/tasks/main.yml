---
- name: Add certbot repo
  apt_repository:
    repo: 'ppa:certbot/certbot'
    state: present
  tags:
    - letsencrypt
    - letsencrypt:install

- name: Install Let's Encrypt
  apt: name="{{ letsencrypt_package }}"
  tags: ['letsencrypt', 'letsencrypt:install']

- name: Create Let's Encrypt directories
  file:
    state: directory
    path: "{{ item }}"
    owner: "{{ letsencrypt_webuser }}"
    group: "{{ letsencrypt_webuser }}"
  with_items:
    - "/etc/letsencrypt"
    - "/var/log/letsencrypt"
    - "/var/lib/letsencrypt"
  tags: ['letsencrypt', 'letsencrypt:configuration']

- name: Create Let's Encrypt webroot directory
  file:
    state: directory
    path: "{{ letsencrypt_webroot }}"
    owner: "{{ letsencrypt_webuser }}"
    group: "{{ letsencrypt_webuser }}"
  become: True
  become_user: "{{ letsencrypt_webuser }}"
  tags: ['letsencrypt', 'letsencrypt:configuration']

- name: Copy nginx config
  template:
    src: "{{ letsencrypt_webserver_config }}"
    dest: "{{ letsencrypt_webserver_sites_available }}/{{ letsencrypt_webserver_config | basename }}"
  when: letsencrypt_webserver == "nginx"
  tags: ['letsencrypt', 'letsencrypt:configuration']

- name: Enable nginx config
  file:
    state: link
    path: "{{ letsencrypt_webserver_sites_enabled }}/{{ letsencrypt_webserver_config | basename }}"
    src: "{{ letsencrypt_webserver_sites_available }}/{{ letsencrypt_webserver_config | basename }}"
  when: letsencrypt_webserver == "nginx"
  tags: ['letsencrypt', 'letsencrypt:configuration']

- name: Reload nginx
  service: name=nginx state=reloaded
  when: letsencrypt_webserver == "nginx"
  tags: ['letsencrypt', 'letsencrypt:configuration']

- name: Set permissions for log file
  file:
    path: "{{ letsencrypt_logfile }}"
    state: touch
    owner: "{{ letsencrypt_webuser }}"
    group: "{{ letsencrypt_webuser }}"
    mode: 0644
  tags: ['letsencrypt', 'letsencrypt:configuration']

- name: Generate certificates using webroot
  command: >
    {{ letsencrypt_command }} certonly {{ letsencrypt_flags }} --agree-tos -m "{{ letsencrypt_email }}"
    --webroot -w "{{ letsencrypt_webroot }}" -d {{ item.domains | join(' -d ') }}
  args:
    creates: /etc/letsencrypt/live/{{ item.domains[0] }}/fullchain.pem
  with_items: "{{ letsencrypt_certs }}"
  become: True
  become_user: "{{ letsencrypt_webuser }}"
  run_once: true
  when: letsencrypt_run|bool == true
  tags: ['letsencrypt', 'letsencrypt:run']

- name: Make sure certbot systemd override dir exists
  file: path=/etc/systemd/system/certbot.service.d state=directory
  tags:
    - letsencrypt
    - letsencrypt:configuration

- name: Make sure to restart service on certbot/ssl renewal
  copy:
    src=certbot_override.conf
    dest=/etc/systemd/system/certbot.service.d/certbot.conf
  notify:
    - reload systemd configuration
  tags:
    - letsencrypt
    - letsencrypt:configuration

